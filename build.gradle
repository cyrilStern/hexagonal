buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.quarkus:gradle-application-plugin:$quarkusPlatformVersion"
    }
}
plugins{
    id 'java'
    id("com.github.spotbugs") version "6.0.8"
    id 'com.diffplug.spotless' version "6.25.0" //version ok with string template
    id 'jacoco'
}
repositories {
    mavenCentral()
}
subprojects.findAll{
    group "com.splio.$it.name"
    version 'test'
    if(it.name == 'infrastructure'){
        print(it.name)
    }
}
spotless {
    java {
        target project.fileTree(project.rootDir) {
            include '**/*.java'
            exclude '**/build/**'
        }
        importOrder 'java', 'jakarta', 'org', 'com', 'com.splio'   // A sequence of package names
        removeUnusedImports()
        toggleOffOn()
        googleJavaFormat()
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeader '/** Copyright (c) 2023 Splio.com All rights reserved. */'
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin:  'com.github.spotbugs'

    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
    }
    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }
    tasks.withType(JavaCompile).each {
        it.options.compilerArgs.add('--enable-preview')
    }
    test {
        jvmArgs(['--enable-preview'])
    }

    tasks.spotbugsMain {
        reports.create("html") {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs.html")
            setStylesheet("fancy-hist.xsl")
        }
    }
}
